{
	"info": {
		"_postman_id": "35c5fb2d-28dc-4c73-8339-4de61cd1b97f",
		"name": "REGGetFilteredFlightInformation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authenticate RES API GetFilteredFlightInformation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Save access_token to Postman variables, so that this is\r",
							"// populated as bearer tokens for subsequent API calls.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.globals.set('access_token', jsonData.access_token);\r",
							"console.log(`New token has been set: ${jsonData.access_token}`);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Env",
						"value": "{{Env}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{OcpApimSubscriptionKey}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "MerlotAdmin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Password1!",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "role",
							"value": "User",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/auth/token",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scenario 1: departureDate arrivalDate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"var crew = []\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{OcpApimSubscriptionKey}}",
						"type": "text"
					},
					{
						"key": "Env",
						"value": "{{Env}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true",
							"disabled": true
						},
						{
							"key": "searchCriteria.Bay",
							"value": "A",
							"disabled": true
						},
						{
							"key": "searchCriteria.Gate",
							"value": "A1",
							"disabled": true
						},
						{
							"key": "searchCriteria.designatorCode",
							"value": "S",
							"disabled": true
						},
						{
							"key": "searchCriteria.Changeddate",
							"value": "2020-07-09T00:00:00Z",
							"disabled": true
						}
					]
				},
				"description": "Ensure that returned flights are within departureDATE (date 00:00 to 23:00 if departureenddate is null)\r\n\r\nand within Arrivaldate (00:00 to 23:00 if arrivalenddate is null)\r\n\r\n  \r\n\r\nSample\r\nIf DepartureEndDate not inputted\r\nMay 1 00:00:00<STD<May 1 23:59:00\r\nIf ArrivalEndDate not inputted\r\nMay 1 00:00:00<STA<May 1 23:59:00"
			},
			"response": []
		},
		{
			"name": "Scenario 1 ma-platform 2020.8 : departureDate arrivalDate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"var crew = []\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true",
							"disabled": true
						},
						{
							"key": "searchCriteria.Bay",
							"value": "A",
							"disabled": true
						},
						{
							"key": "searchCriteria.Gate",
							"value": "A1",
							"disabled": true
						},
						{
							"key": "searchCriteria.designatorCode",
							"value": "S",
							"disabled": true
						},
						{
							"key": "searchCriteria.Changeddate",
							"value": "2020-07-09T00:00:00Z",
							"disabled": true
						}
					]
				},
				"description": "Ensure that returned flights are within departureDATE (date 00:00 to 23:00 if departureenddate is null)\r\n\r\nand within Arrivaldate (00:00 to 23:00 if arrivalenddate is null)\r\n\r\n  \r\n\r\nSample\r\nIf DepartureEndDate not inputted\r\nMay 1 00:00:00<STD<May 1 23:59:00\r\nIf ArrivalEndDate not inputted\r\nMay 1 00:00:00<STA<May 1 23:59:00"
			},
			"response": []
		},
		{
			"name": "Scenario 2  flight",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"CCU\"\r",
							"var departurePortIcao = \"VECC\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"738\"\r",
							"var eta = \"2020-06-01T04:10:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"083\"\r",
							"var flightFollowId = 148533\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-06-01T04:10:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{OcpApimSubscriptionKey}}",
						"type": "text"
					},
					{
						"key": "Env",
						"value": "{{Env}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00&searchCriteria.bypassCache=true&searchCriteria.flight=083",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00",
							"disabled": true
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.flight",
							"value": "083"
						}
					]
				},
				"description": "departureDate\r\narrivalDate\r\nflight\r\nEnsure matching flight number is returned and also within the departure and arrival date"
			},
			"response": []
		},
		{
			"name": "Scenario 3 Arrivalport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"CCU\"\r",
							"var arrivalPortIcao = \"VECC\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"BOM\"\r",
							"var departurePortIcao = \"VABB\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"73W\"\r",
							"var eta = \"2020-06-01T03:20:00\"\r",
							"var etd = \"2020-06-01T00:35:00\"\r",
							"var flight = \"490\"\r",
							"var flightFollowId = 155895\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-06-01T03:20:00\"\r",
							"var std = \"2020-06-01T00:35:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[1]\r",
							"\r",
							"var arrivalBay1 = null\r",
							"var arrivalGate1 = \"0\"\r",
							"var arrivalPort1 = \"CCU\"\r",
							"var arrivalPortIcao1 = \"VECC\"\r",
							"var ata1 = null\r",
							"var atd1 = null\r",
							"var cancelled1 = false\r",
							"var crew1 = []\r",
							"var delays1 = []\r",
							"var departureBay1 = null\r",
							"var departureDate1= \"2020-06-01T00:00:00\"\r",
							"var departureGate1 = null\r",
							"var departurePort1 = \"BKK\"\r",
							"var departurePortIcao1 = \"VTBS\"\r",
							"var designatorCode1 = \"SG\"\r",
							"var equipmentRego1 = \"\"\r",
							"var equipmentType1 = \"738\"\r",
							"var eta1 = \"2020-06-01T06:10:00\"\r",
							"var etd1 = \"2020-06-01T05:10:00\"\r",
							"var flight1 = \"084\"\r",
							"var flightFollowId1 = 148565\r",
							"var flightSSRs1 = []\r",
							"var operator1 = \"SG\"\r",
							"var paxNumbers1 = []\r",
							"var rescheduled1 = false\r",
							"var retime1 = false\r",
							"var sta1 = \"2020-06-01T06:10:00\"\r",
							"var std1 = \"2020-06-01T05:10:00\"\r",
							"var updatedDate1 = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[2]\r",
							"var arrivalBay2 = null\r",
							"var arrivalGate2 = \"0\"\r",
							"var arrivalPort2 = \"CCU\"\r",
							"var arrivalPortIcao2 = \"VECC\"\r",
							"var ata2 = null\r",
							"var atd2 = null\r",
							"var cancelled2 = false\r",
							"var crew2 = []\r",
							"var delays2 = []\r",
							"var departureBay2 = null\r",
							"var departureDate2= \"2020-06-01T00:00:00\"\r",
							"var departureGate2 = null\r",
							"var departurePort2 = \"BLR\"\r",
							"var departurePortIcao2 = \"VOBL\"\r",
							"var designatorCode2 = \"SG\"\r",
							"var equipmentRego2 = \"\"\r",
							"var equipmentType2 = \"73H\"\r",
							"var eta2 = \"2020-06-01T08:25:00\"\r",
							"var etd2 = \"2020-06-01T05:25:00\"\r",
							"var flight2 = \"401\"\r",
							"var flightFollowId2 = 153961\r",
							"var flightSSRs2 = []\r",
							"var operator2 = \"SG\"\r",
							"var paxNumbers2 = []\r",
							"var rescheduled2 = false\r",
							"var retime2 = false\r",
							"var sta2 = \"2020-06-01T08:25:00\"\r",
							"var std2 = \"2020-06-01T05:25:00\"\r",
							"var updatedDate2 = \"2020-04-26T26:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"pm.test(\"ArrivalBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalBay).to.eql(arrivalBay1);\r",
							"});\r",
							"pm.test(\"ArrivalGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalGate).to.eql(arrivalGate1);\r",
							"});\r",
							"pm.test(\"ArrivalPort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPort).to.eql(arrivalPort1);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPortIcao).to.eql(arrivalPortIcao1);\r",
							"});\r",
							"pm.test(\"ata1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].ata).to.eql(ata1);\r",
							"});\r",
							"pm.test(\"atd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].atd).to.eql(atd1);\r",
							"});\r",
							"pm.test(\"cancelled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].cancelled).to.eql(cancelled1);\r",
							"});\r",
							"pm.test(\"crew1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].crew).to.eql(crew1);\r",
							"});\r",
							"pm.test(\"departureBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureBay).to.eql(departureBay1);\r",
							"});\r",
							"pm.test(\"departureDate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureDate).to.eql(departureDate1);\r",
							"});\r",
							"pm.test(\"departureGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureGate).to.eql(departureGate1);\r",
							"});\r",
							"pm.test(\"departurePort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePort).to.eql(departurePort1);\r",
							"});\r",
							"pm.test(\"departurePortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePortIcao).to.eql(departurePortIcao1);\r",
							"});\r",
							"pm.test(\"designatorCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].designatorCode).to.eql(designatorCode1);\r",
							"});\r",
							"pm.test(\"equipmentRego1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentRego).to.eql(equipmentRego1);\r",
							"});\r",
							"pm.test(\"equipmentType1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentType).to.eql(equipmentType1);\r",
							"});\r",
							"pm.test(\"eta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].eta).to.eql(eta1);\r",
							"});\r",
							"pm.test(\"etd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].etd).to.eql(etd1);\r",
							"});\r",
							"pm.test(\"flight1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flight).to.eql(flight1);\r",
							"});\r",
							"pm.test(\"flightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightFollowId).to.eql(flightFollowId1);\r",
							"});\r",
							"pm.test(\"flightSSRs1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightSSRs).to.eql(flightSSRs1);\r",
							"});\r",
							"pm.test(\"operator1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].operator).to.eql(operator1);\r",
							"});\r",
							"pm.test(\"paxNumbers1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].paxNumbers).to.eql(paxNumbers1);\r",
							"});\r",
							"pm.test(\"rescheduled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].rescheduled).to.eql(rescheduled1);\r",
							"});\r",
							"pm.test(\"retime1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].retime).to.eql(retime1);\r",
							"});\r",
							"\r",
							"pm.test(\"sta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].sta).to.eql(sta1);\r",
							"});\r",
							"pm.test(\"std1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].std).to.eql(std1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ArrivalBay2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalBay).to.eql(arrivalBay2);\r",
							"});\r",
							"pm.test(\"ArrivalGate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalGate).to.eql(arrivalGate2);\r",
							"});\r",
							"pm.test(\"ArrivalPort2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalPort).to.eql(arrivalPort2);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalPortIcao).to.eql(arrivalPortIcao2);\r",
							"});\r",
							"pm.test(\"ata2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].ata).to.eql(ata2);\r",
							"});\r",
							"pm.test(\"atd2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].atd).to.eql(atd2);\r",
							"});\r",
							"pm.test(\"cancelled2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].cancelled).to.eql(cancelled2);\r",
							"});\r",
							"pm.test(\"crew2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].crew).to.eql(crew2);\r",
							"});\r",
							"pm.test(\"departureBay2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureBay).to.eql(departureBay2);\r",
							"});\r",
							"pm.test(\"departureDate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureDate).to.eql(departureDate2);\r",
							"});\r",
							"pm.test(\"departureGate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureGate).to.eql(departureGate2);\r",
							"});\r",
							"pm.test(\"departurePort2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departurePort).to.eql(departurePort2);\r",
							"});\r",
							"pm.test(\"departurePortIcao2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departurePortIcao).to.eql(departurePortIcao2);\r",
							"});\r",
							"pm.test(\"designatorCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].designatorCode).to.eql(designatorCode2);\r",
							"});\r",
							"pm.test(\"equipmentRego2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].equipmentRego).to.eql(equipmentRego2);\r",
							"});\r",
							"pm.test(\"equipmentType2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].equipmentType).to.eql(equipmentType2);\r",
							"});\r",
							"pm.test(\"eta2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].eta).to.eql(eta2);\r",
							"});\r",
							"pm.test(\"etd2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].etd).to.eql(etd2);\r",
							"});\r",
							"pm.test(\"flight2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flight).to.eql(flight2);\r",
							"});\r",
							"pm.test(\"flightFollowId2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flightFollowId).to.eql(flightFollowId2);\r",
							"});\r",
							"pm.test(\"flightSSRs2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flightSSRs).to.eql(flightSSRs2);\r",
							"});\r",
							"pm.test(\"operator2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].operator).to.eql(operator2);\r",
							"});\r",
							"pm.test(\"paxNumbers2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].paxNumbers).to.eql(paxNumbers2);\r",
							"});\r",
							"pm.test(\"rescheduled2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].rescheduled).to.eql(rescheduled2);\r",
							"});\r",
							"pm.test(\"retime2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].retime).to.eql(retime2);\r",
							"});\r",
							"\r",
							"pm.test(\"sta2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].sta).to.eql(sta2);\r",
							"});\r",
							"pm.test(\"std2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].std).to.eql(std2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{OcpApimSubscriptionKey}}",
						"type": "text"
					},
					{
						"key": "Env",
						"value": "{{Env}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00&searchCriteria.arrivalDate=2020-06-01T00:00:00&searchCriteria.bypassCache=true&searchCriteria.ArrivalPort=CCU",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.ArrivalPort",
							"value": "CCU"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": "BOM",
							"disabled": true
						}
					]
				},
				"description": "Ensure the response returns flights that arrive in CCU and within the dparture and arrival date"
			},
			"response": []
		},
		{
			"name": "Scenario 4  Departureport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"CCU\"\r",
							"var arrivalPortIcao = \"VECC\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"BOM\"\r",
							"var departurePortIcao = \"VABB\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"73W\"\r",
							"var eta = \"2020-06-01T03:20:00\"\r",
							"var etd = \"2020-06-01T00:35:00\"\r",
							"var flight = \"490\"\r",
							"var flightFollowId = 155895\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-06-01T03:20:00\"\r",
							"var std = \"2020-06-01T00:35:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00&searchCriteria.arrivalDate=2020-06-01T00:00:00&searchCriteria.bypassCache=true&searchCriteria.ArrivalPort=CCU&searchCriteria.DeparturePort=BOM",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.ArrivalPort",
							"value": "CCU"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": "BOM"
						},
						{
							"key": "search",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Ensure the response returns flights that Departs in BOM and arrive in CCU and within the dparture and arrival date"
			},
			"response": []
		},
		{
			"name": "Scenario 5: Rego",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"var crew = []\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"\r",
							"var arrivalBay1 = null\r",
							"var arrivalGate1 = \"0\"\r",
							"var arrivalPort1 = \"MAA\"\r",
							"var arrivalPortIcao1 = \"VOMM\"\r",
							"var ata1 = null\r",
							"var atd1 = null\r",
							"var cancelled1 = false\r",
							"var crew1 = []\r",
							"var delays1 = []\r",
							"var departureBay1 = null\r",
							"var departureDate1= \"2020-06-01T00:00:00\"\r",
							"var departureGate1 = null\r",
							"var departurePort1 = \"CMB\"\r",
							"var departurePortIcao1 = \"VCBI\"\r",
							"var designatorCode1 = \"SG\"\r",
							"var equipmentRego1 = \"SYR\"\r",
							"var equipmentType1 = \"73H\"\r",
							"var eta1 = \"2020-06-01T04:30:00\"\r",
							"var etd1 = \"2020-06-01T02:40:00\"\r",
							"var flight1 = \"002\"\r",
							"var flightFollowId1 = 147134\r",
							"var flightSSRs1 = []\r",
							"var operator1 = \"SG\"\r",
							"var paxNumbers1 = []\r",
							"var rescheduled1 = false\r",
							"var rescheduled1 = false      \r",
							"var retime1 = false\r",
							"var sta1 = \"2020-06-01T04:30:00\"\r",
							"var std1 = \"2020-06-01T02:40:00\"\r",
							"var updatedDate1 = \"2020-07-03T19:13:27.703\"\r",
							"\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ArrivalBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalBay).to.eql(arrivalBay1);\r",
							"});\r",
							"pm.test(\"ArrivalGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalGate).to.eql(arrivalGate1);\r",
							"});\r",
							"pm.test(\"ArrivalPort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPort).to.eql(arrivalPort1);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPortIcao).to.eql(arrivalPortIcao1);\r",
							"});\r",
							"pm.test(\"ata1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].ata).to.eql(ata1);\r",
							"});\r",
							"pm.test(\"atd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].atd).to.eql(atd1);\r",
							"});\r",
							"pm.test(\"cancelled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].cancelled).to.eql(cancelled1);\r",
							"});\r",
							"pm.test(\"crew1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].crew).to.eql(crew1);\r",
							"});\r",
							"pm.test(\"departureBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureBay).to.eql(departureBay1);\r",
							"});\r",
							"pm.test(\"departureDate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureDate).to.eql(departureDate1);\r",
							"});\r",
							"pm.test(\"departureGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureGate).to.eql(departureGate1);\r",
							"});\r",
							"pm.test(\"departurePort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePort).to.eql(departurePort1);\r",
							"});\r",
							"pm.test(\"departurePortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePortIcao).to.eql(departurePortIcao1);\r",
							"});\r",
							"pm.test(\"designatorCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].designatorCode).to.eql(designatorCode1);\r",
							"});\r",
							"pm.test(\"equipmentRego1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentRego).to.eql(equipmentRego1);\r",
							"});\r",
							"pm.test(\"equipmentType1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentType).to.eql(equipmentType1);\r",
							"});\r",
							"pm.test(\"eta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].eta).to.eql(eta1);\r",
							"});\r",
							"pm.test(\"etd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].etd).to.eql(etd1);\r",
							"});\r",
							"pm.test(\"flight1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flight).to.eql(flight1);\r",
							"});\r",
							"pm.test(\"flightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightFollowId).to.eql(flightFollowId1);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].operator).to.eql(operator1);\r",
							"});\r",
							"pm.test(\"paxNumbers1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].paxNumbers).to.eql(paxNumbers1);\r",
							"});\r",
							"pm.test(\"rescheduled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].rescheduled).to.eql(rescheduled1);\r",
							"});\r",
							"pm.test(\"retime1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].retime).to.eql(retime1);\r",
							"});\r",
							"\r",
							"pm.test(\"sta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].sta).to.eql(sta1);\r",
							"});\r",
							"pm.test(\"std1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].std).to.eql(std1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=true&searchCriteria.Rego=SYR",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.Rego",
							"value": "SYR"
						}
					]
				},
				"description": "Ensure the response returns flights that has SYR Rego and within the dparture and arrival date"
			},
			"response": []
		},
		{
			"name": "Scenario 6  ReturnZuluTimeMode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-05-31T18:35:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"CCU\"\r",
							"var departurePortIcao = \"VECC\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"738\"\r",
							"var eta = \"2020-05-31T21:10:00\"\r",
							"var etd = \"2020-05-31T18:35:00\"\r",
							"var flight = \"083\"\r",
							"var flightFollowId = 148533\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-05-31T21:10:00\"\r",
							"var std = \"2020-05-31T18:35:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00&searchCriteria.arrivalDate=2020-06-01T00:00:00&searchCriteria.bypassCache=true&searchCriteria.flight=083&searchCriteria.returnzulutimemode=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.flight",
							"value": "083"
						},
						{
							"key": "searchCriteria.returnzulutimemode",
							"value": "true"
						}
					]
				},
				"description": "departureDate\r\narrivalDate\r\nflight\r\nReturnZuluTimeMode"
			},
			"response": []
		},
		{
			"name": "Scenario 7  TimeModeRequest TimeModeResponse",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-05-31T18:35:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"CCU\"\r",
							"var departurePortIcao = \"VECC\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"738\"\r",
							"var eta = \"2020-05-31T21:10:00\"\r",
							"var etd = \"2020-05-31T18:35:00\"\r",
							"var flight = \"083\"\r",
							"var flightFollowId = 148533\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-05-31T21:10:00\"\r",
							"var std = \"2020-05-31T18:35:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.arrivalDate=2020-05-31T18:35:00&searchCriteria.departureDate=2020-05-31T18:35:00&searchCriteria.bypassCache=true&searchCriteria.flight=083&searchCriteria.TimeModeRequest=Zulu&searchCriteria.TimeModeResponse=Zulu",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-05-31T18:35:00"
						},
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-05-31T18:35:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.flight",
							"value": "083"
						},
						{
							"key": "searchCriteria.TimeModeRequest",
							"value": "Zulu"
						},
						{
							"key": "searchCriteria.TimeModeResponse",
							"value": "Zulu"
						}
					]
				},
				"description": "departureDate\r\narrivalDate\r\nflight\r\nTimeModeRequest\r\nTimeModeResponse\r\n"
			},
			"response": []
		},
		{
			"name": "Scenario 9:  Check limit of 15 days, based on DepartureDate to DepartureEndDate (if not null) and ArrivalDate to ArrivalEndDate (if not null)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-05-02T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"HKG\"\r",
							"var departurePortIcao = \"VHHH\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-05-02T04:30:00\"\r",
							"var etd = \"2020-05-02T02:30:00\"\r",
							"var flight = \"576\"\r",
							"var flightFollowId = 173154\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-05-02T04:30:00\"\r",
							"var std = \"2020-05-02T02:30:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[1]\r",
							"\r",
							"var arrivalBay1 = null\r",
							"var arrivalGate1 = \"0\"\r",
							"var arrivalPort1 = \"BKK\"\r",
							"var arrivalPortIcao1 = \"VTBS\"\r",
							"var ata1 = null\r",
							"var atd1 = null\r",
							"var cancelled1 = false\r",
							"var crew1 = []\r",
							"var delays1 = []\r",
							"var departureBay1 = null\r",
							"var departureDate1= \"2020-05-03T00:00:00\"\r",
							"var departureGate1 = null\r",
							"var departurePort1 = \"HKG\"\r",
							"var departurePortIcao1 = \"VHHH\"\r",
							"var designatorCode1 = \"SG\"\r",
							"var equipmentRego1 = \"\"\r",
							"var equipmentType1 = \"73H\"\r",
							"var eta1 = \"2020-05-03T04:30:00\"\r",
							"var etd1 = \"2020-05-03T02:30:00\"\r",
							"var flight1 = \"576\"\r",
							"var flightFollowId1 = 173155\r",
							"var flightSSRs1 = []\r",
							"var operator1 = \"SG\"\r",
							"var paxNumbers1 = []\r",
							"var rescheduled1 = false\r",
							"var retime1 = false\r",
							"var sta1 = \"2020-05-03T04:30:00\"\r",
							"var std1 = \"2020-05-03T02:30:00\"\r",
							"var updatedDate1 = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[2]\r",
							"var arrivalBay2 = null\r",
							"var arrivalGate2 = \"0\"\r",
							"var arrivalPort2 = \"BKK\"\r",
							"var arrivalPortIcao2 = \"VTBS\"\r",
							"var ata2 = null\r",
							"var atd2 = null\r",
							"var cancelled2 = false\r",
							"var crew2 = []\r",
							"var delays2 = []\r",
							"var departureBay2 = null\r",
							"var departureDate2= \"2020-05-04T00:00:00\"\r",
							"var departureGate2 = null\r",
							"var departurePort2 = \"HKG\"\r",
							"var departurePortIcao2 = \"VHHH\"\r",
							"var designatorCode2 = \"SG\"\r",
							"var equipmentRego2 = \"\"\r",
							"var equipmentType2 = \"73H\"\r",
							"var eta2 = \"2020-05-04T04:30:00\"\r",
							"var etd2 = \"2020-05-04T02:30:00\"\r",
							"var flight2 = \"576\"\r",
							"var flightFollowId2 = 173156\r",
							"var flightSSRs2 = []\r",
							"var operator2 = \"SG\"\r",
							"var paxNumbers2 = []\r",
							"var rescheduled2 = false\r",
							"var retime2 = false\r",
							"var sta2 = \"2020-05-04T04:30:00\"\r",
							"var std2 = \"2020-05-04T02:30:00\"\r",
							"var updatedDate2 = \"2020-04-26T26:46:39.043\"\r",
							"\r",
							"-[18]\r",
							"var arrivalBay18 = null\r",
							"var arrivalGate18 = \"0\"\r",
							"var arrivalPort18 = \"BOM\"\r",
							"var arrivalPortIcao18 = \"VABB\"\r",
							"var ata18 = null\r",
							"var atd18= null\r",
							"var cancelled18 = false\r",
							"var crew18 = []\r",
							"var delay18 = []\r",
							"var departureBay18 = null\r",
							"var departureDate18= \"2020-05-17T00:00:00\"\r",
							"var departureGate18 = null\r",
							"var departurePort18 = \"HKG\"\r",
							"var departurePortIcao18= \"VHHH\"\r",
							"var designatorCode18 = \"SG\"\r",
							"var equipmentRego18 = \"\"\r",
							"var equipmentType18 = \"738\"\r",
							"var eta18 = \"2020-05-17T18:35:00\"\r",
							"var etd18 = \"2020-05-17T14:15:00\"\r",
							"var flight18 = \"042\"\r",
							"var flightFollowId18 = 147840\r",
							"var flightSSRs18 = []\r",
							"var operator18 = \"SG\"\r",
							"var paxNumbers18 = []\r",
							"var rescheduled18 = false\r",
							"var retime18 = false\r",
							"var sta18 = \"2020-05-17T18:35:00\"\r",
							"var std18 = \"2020-05-17T14:15:00\"\r",
							"var updatedDate18 = \"2020-04-26T26:46:39.043\"\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalBay).to.eql(arrivalBay1);\r",
							"});\r",
							"pm.test(\"ArrivalGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalGate).to.eql(arrivalGate1);\r",
							"});\r",
							"pm.test(\"ArrivalPort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPort).to.eql(arrivalPort1);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPortIcao).to.eql(arrivalPortIcao1);\r",
							"});\r",
							"pm.test(\"ata1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].ata).to.eql(ata1);\r",
							"});\r",
							"pm.test(\"atd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].atd).to.eql(atd1);\r",
							"});\r",
							"pm.test(\"cancelled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].cancelled).to.eql(cancelled1);\r",
							"});\r",
							"pm.test(\"crew1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].crew).to.eql(crew1);\r",
							"});\r",
							"pm.test(\"departureBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureBay).to.eql(departureBay1);\r",
							"});\r",
							"pm.test(\"departureDate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureDate).to.eql(departureDate1);\r",
							"});\r",
							"pm.test(\"departureGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureGate).to.eql(departureGate1);\r",
							"});\r",
							"pm.test(\"departurePort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePort).to.eql(departurePort1);\r",
							"});\r",
							"pm.test(\"departurePortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePortIcao).to.eql(departurePortIcao1);\r",
							"});\r",
							"pm.test(\"designatorCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].designatorCode).to.eql(designatorCode1);\r",
							"});\r",
							"pm.test(\"equipmentRego1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentRego).to.eql(equipmentRego1);\r",
							"});\r",
							"pm.test(\"equipmentType1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentType).to.eql(equipmentType1);\r",
							"});\r",
							"pm.test(\"eta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].eta).to.eql(eta1);\r",
							"});\r",
							"pm.test(\"etd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].etd).to.eql(etd1);\r",
							"});\r",
							"pm.test(\"flight1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flight).to.eql(flight1);\r",
							"});\r",
							"pm.test(\"flightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightFollowId).to.eql(flightFollowId1);\r",
							"});\r",
							"pm.test(\"flightSSRs1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightSSRs).to.eql(flightSSRs1);\r",
							"});\r",
							"pm.test(\"operator1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].operator).to.eql(operator1);\r",
							"});\r",
							"pm.test(\"paxNumbers1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].paxNumbers).to.eql(paxNumbers1);\r",
							"});\r",
							"pm.test(\"rescheduled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].rescheduled).to.eql(rescheduled1);\r",
							"});\r",
							"pm.test(\"retime1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].retime).to.eql(retime1);\r",
							"});\r",
							"\r",
							"pm.test(\"sta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].sta).to.eql(sta1);\r",
							"});\r",
							"pm.test(\"std1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].std).to.eql(std1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ArrivalBay2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalBay).to.eql(arrivalBay2);\r",
							"});\r",
							"pm.test(\"ArrivalGate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalGate).to.eql(arrivalGate2);\r",
							"});\r",
							"pm.test(\"ArrivalPort2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalPort).to.eql(arrivalPort2);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalPortIcao).to.eql(arrivalPortIcao2);\r",
							"});\r",
							"pm.test(\"ata2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].ata).to.eql(ata2);\r",
							"});\r",
							"pm.test(\"atd2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].atd).to.eql(atd2);\r",
							"});\r",
							"pm.test(\"cancelled2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].cancelled).to.eql(cancelled2);\r",
							"});\r",
							"pm.test(\"crew2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].crew).to.eql(crew2);\r",
							"});\r",
							"pm.test(\"departureBay2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureBay).to.eql(departureBay2);\r",
							"});\r",
							"pm.test(\"departureDate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureDate).to.eql(departureDate2);\r",
							"});\r",
							"pm.test(\"departureGate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureGate).to.eql(departureGate2);\r",
							"});\r",
							"pm.test(\"departurePort2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departurePort).to.eql(departurePort2);\r",
							"});\r",
							"pm.test(\"departurePortIcao2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departurePortIcao).to.eql(departurePortIcao2);\r",
							"});\r",
							"pm.test(\"designatorCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].designatorCode).to.eql(designatorCode2);\r",
							"});\r",
							"pm.test(\"equipmentRego2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].equipmentRego).to.eql(equipmentRego2);\r",
							"});\r",
							"pm.test(\"equipmentType2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].equipmentType).to.eql(equipmentType2);\r",
							"});\r",
							"pm.test(\"eta2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].eta).to.eql(eta2);\r",
							"});\r",
							"pm.test(\"etd2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].etd).to.eql(etd2);\r",
							"});\r",
							"pm.test(\"flight2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flight).to.eql(flight2);\r",
							"});\r",
							"pm.test(\"flightFollowId2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flightFollowId).to.eql(flightFollowId2);\r",
							"});\r",
							"pm.test(\"flightSSRs2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flightSSRs).to.eql(flightSSRs2);\r",
							"});\r",
							"pm.test(\"operator2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].operator).to.eql(operator2);\r",
							"});\r",
							"pm.test(\"paxNumbers2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].paxNumbers).to.eql(paxNumbers2);\r",
							"});\r",
							"pm.test(\"rescheduled2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].rescheduled).to.eql(rescheduled2);\r",
							"});\r",
							"pm.test(\"retime2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].retime).to.eql(retime2);\r",
							"});\r",
							"\r",
							"pm.test(\"sta2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].sta).to.eql(sta2);\r",
							"});\r",
							"pm.test(\"std2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].std).to.eql(std2);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ArrivalBay18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].arrivalBay).to.eql(arrivalBay18);\r",
							"});\r",
							"pm.test(\"ArrivalGate18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].arrivalGate).to.eql(arrivalGate18);\r",
							"});\r",
							"pm.test(\"ArrivalPort18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].arrivalPort).to.eql(arrivalPort18);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].arrivalPortIcao).to.eql(arrivalPortIcao18);\r",
							"});\r",
							"pm.test(\"ata18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].ata).to.eql(ata18);\r",
							"});\r",
							"pm.test(\"atd18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].atd).to.eql(atd18);\r",
							"});\r",
							"pm.test(\"cancelled18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].cancelled).to.eql(cancelled18);\r",
							"});\r",
							"pm.test(\"crew18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].crew).to.eql(crew18);\r",
							"});\r",
							"pm.test(\"departureBay18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].departureBay).to.eql(departureBay18);\r",
							"});\r",
							"pm.test(\"departureDate18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].departureDate).to.eql(departureDate18);\r",
							"});\r",
							"pm.test(\"departureGate18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].departureGate).to.eql(departureGate18);\r",
							"});\r",
							"pm.test(\"departurePort18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].departurePort).to.eql(departurePort18);\r",
							"});\r",
							"pm.test(\"departurePortIcao18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].departurePortIcao).to.eql(departurePortIcao18);\r",
							"});\r",
							"pm.test(\"designatorCode18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].designatorCode).to.eql(designatorCode18);\r",
							"});\r",
							"pm.test(\"equipmentRego18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].equipmentRego).to.eql(equipmentRego18);\r",
							"});\r",
							"pm.test(\"equipmentType18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].equipmentType).to.eql(equipmentType18);\r",
							"});\r",
							"pm.test(\"eta18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].eta).to.eql(eta18);\r",
							"});\r",
							"pm.test(\"etd18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].etd).to.eql(etd18);\r",
							"});\r",
							"pm.test(\"flight18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].flight).to.eql(flight18);\r",
							"});\r",
							"pm.test(\"flightFollowId18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].flightFollowId).to.eql(flightFollowId18);\r",
							"});\r",
							"pm.test(\"flightSSRs18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].flightSSRs).to.eql(flightSSRs18);\r",
							"});\r",
							"pm.test(\"operator18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].operator).to.eql(operator18);\r",
							"});\r",
							"pm.test(\"paxNumbers18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].paxNumbers).to.eql(paxNumbers18);\r",
							"});\r",
							"pm.test(\"rescheduled18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].rescheduled).to.eql(rescheduled18);\r",
							"});\r",
							"pm.test(\"retime18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].retime).to.eql(retime18);\r",
							"});\r",
							"\r",
							"pm.test(\"sta18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].sta).to.eql(sta18);\r",
							"});\r",
							"pm.test(\"std18\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[18].std).to.eql(std18);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-05-02T00:00:00&searchCriteria.arrivalDate=2020-05-02T00:00:00&searchCriteria.bypassCache=true&searchCriteria.departureEnddate=2020-05-17T23:59:00&searchCriteria.arrivalEndDate=2020-05-17T23:59:00&searchCriteria.DeparturePort=HKG",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.departureEnddate",
							"value": "2020-05-17T23:59:00"
						},
						{
							"key": "searchCriteria.arrivalEndDate",
							"value": "2020-05-17T23:59:00"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": "HKG"
						}
					]
				},
				"description": "departureDate\r\ndepartureEndDate"
			},
			"response": []
		},
		{
			"name": "Scenario 10:  Check  if more than the limit of 15 days, based on DepartureDate to DepartureEndDate (if not null) and ArrivalDate to ArrivalEndDate (if not null) Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"[]\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-05-02T00:00:00&searchCriteria.arrivalDate=2020-05-02T00:00:00&searchCriteria.bypassCache=true&searchCriteria.departureEnddate=2020-05-18T23:59:00&searchCriteria.arrivalEndDate=2020-05-18T23:59:00&searchCriteria.DeparturePort=",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.departureEnddate",
							"value": "2020-05-18T23:59:00"
						},
						{
							"key": "searchCriteria.arrivalEndDate",
							"value": "2020-05-18T23:59:00"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": ""
						}
					]
				},
				"description": "departureDate\r\ndepartureEndDate"
			},
			"response": []
		},
		{
			"name": "Scenario 8: departureDateEnd and arrivalDateend",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-05-02T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"HKG\"\r",
							"var departurePortIcao = \"VHHH\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-05-02T04:30:00\"\r",
							"var etd = \"2020-05-02T02:30:00\"\r",
							"var flight = \"576\"\r",
							"var flightFollowId = 173154\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-05-02T04:30:00\"\r",
							"var std = \"2020-05-02T02:30:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[1]\r",
							"\r",
							"var arrivalBay1 = null\r",
							"var arrivalGate1 = \"0\"\r",
							"var arrivalPort1 = \"BKK\"\r",
							"var arrivalPortIcao1 = \"VTBS\"\r",
							"var ata1 = null\r",
							"var atd1 = null\r",
							"var cancelled1 = false\r",
							"var crew1 = []\r",
							"var delays1 = []\r",
							"var departureBay1 = null\r",
							"var departureDate1= \"2020-05-03T00:00:00\"\r",
							"var departureGate1 = null\r",
							"var departurePort1 = \"HKG\"\r",
							"var departurePortIcao1 = \"VHHH\"\r",
							"var designatorCode1 = \"SG\"\r",
							"var equipmentRego1 = \"\"\r",
							"var equipmentType1 = \"73H\"\r",
							"var eta1 = \"2020-05-03T04:30:00\"\r",
							"var etd1 = \"2020-05-03T02:30:00\"\r",
							"var flight1 = \"576\"\r",
							"var flightFollowId1 = 173155\r",
							"var flightSSRs1 = []\r",
							"var operator1 = \"SG\"\r",
							"var paxNumbers1 = []\r",
							"var rescheduled1 = false\r",
							"var retime1 = false\r",
							"var sta1 = \"2020-05-03T04:30:00\"\r",
							"var std1 = \"2020-05-03T02:30:00\"\r",
							"var updatedDate1 = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[2]\r",
							"var arrivalBay2 = null\r",
							"var arrivalGate2 = \"0\"\r",
							"var arrivalPort2 = \"BKK\"\r",
							"var arrivalPortIcao2 = \"VTBS\"\r",
							"var ata2 = null\r",
							"var atd2 = null\r",
							"var cancelled2 = false\r",
							"var crew2 = []\r",
							"var delays2 = []\r",
							"var departureBay2 = null\r",
							"var departureDate2= \"2020-05-04T00:00:00\"\r",
							"var departureGate2 = null\r",
							"var departurePort2 = \"HKG\"\r",
							"var departurePortIcao2 = \"VHHH\"\r",
							"var designatorCode2 = \"SG\"\r",
							"var equipmentRego2 = \"\"\r",
							"var equipmentType2 = \"73H\"\r",
							"var eta2 = \"2020-05-04T04:30:00\"\r",
							"var etd2 = \"2020-05-04T02:30:00\"\r",
							"var flight2 = \"576\"\r",
							"var flightFollowId2 = 173156\r",
							"var flightSSRs2 = []\r",
							"var operator2 = \"SG\"\r",
							"var paxNumbers2 = []\r",
							"var rescheduled2 = false\r",
							"var retime2 = false\r",
							"var sta2 = \"2020-05-04T04:30:00\"\r",
							"var std2 = \"2020-05-04T02:30:00\"\r",
							"var updatedDate2 = \"2020-04-26T26:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalBay).to.eql(arrivalBay1);\r",
							"});\r",
							"pm.test(\"ArrivalGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalGate).to.eql(arrivalGate1);\r",
							"});\r",
							"pm.test(\"ArrivalPort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPort).to.eql(arrivalPort1);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPortIcao).to.eql(arrivalPortIcao1);\r",
							"});\r",
							"pm.test(\"ata1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].ata).to.eql(ata1);\r",
							"});\r",
							"pm.test(\"atd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].atd).to.eql(atd1);\r",
							"});\r",
							"pm.test(\"cancelled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].cancelled).to.eql(cancelled1);\r",
							"});\r",
							"pm.test(\"crew1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].crew).to.eql(crew1);\r",
							"});\r",
							"pm.test(\"departureBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureBay).to.eql(departureBay1);\r",
							"});\r",
							"pm.test(\"departureDate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureDate).to.eql(departureDate1);\r",
							"});\r",
							"pm.test(\"departureGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureGate).to.eql(departureGate1);\r",
							"});\r",
							"pm.test(\"departurePort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePort).to.eql(departurePort1);\r",
							"});\r",
							"pm.test(\"departurePortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePortIcao).to.eql(departurePortIcao1);\r",
							"});\r",
							"pm.test(\"designatorCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].designatorCode).to.eql(designatorCode1);\r",
							"});\r",
							"pm.test(\"equipmentRego1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentRego).to.eql(equipmentRego1);\r",
							"});\r",
							"pm.test(\"equipmentType1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentType).to.eql(equipmentType1);\r",
							"});\r",
							"pm.test(\"eta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].eta).to.eql(eta1);\r",
							"});\r",
							"pm.test(\"etd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].etd).to.eql(etd1);\r",
							"});\r",
							"pm.test(\"flight1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flight).to.eql(flight1);\r",
							"});\r",
							"pm.test(\"flightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightFollowId).to.eql(flightFollowId1);\r",
							"});\r",
							"pm.test(\"flightSSRs1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightSSRs).to.eql(flightSSRs1);\r",
							"});\r",
							"pm.test(\"operator1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].operator).to.eql(operator1);\r",
							"});\r",
							"pm.test(\"paxNumbers1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].paxNumbers).to.eql(paxNumbers1);\r",
							"});\r",
							"pm.test(\"rescheduled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].rescheduled).to.eql(rescheduled1);\r",
							"});\r",
							"pm.test(\"retime1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].retime).to.eql(retime1);\r",
							"});\r",
							"\r",
							"pm.test(\"sta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].sta).to.eql(sta1);\r",
							"});\r",
							"pm.test(\"std1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].std).to.eql(std1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"ArrivalBay2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalBay).to.eql(arrivalBay2);\r",
							"});\r",
							"pm.test(\"ArrivalGate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalGate).to.eql(arrivalGate2);\r",
							"});\r",
							"pm.test(\"ArrivalPort2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalPort).to.eql(arrivalPort2);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].arrivalPortIcao).to.eql(arrivalPortIcao2);\r",
							"});\r",
							"pm.test(\"ata2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].ata).to.eql(ata2);\r",
							"});\r",
							"pm.test(\"atd2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].atd).to.eql(atd2);\r",
							"});\r",
							"pm.test(\"cancelled2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].cancelled).to.eql(cancelled2);\r",
							"});\r",
							"pm.test(\"crew2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].crew).to.eql(crew2);\r",
							"});\r",
							"pm.test(\"departureBay2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureBay).to.eql(departureBay2);\r",
							"});\r",
							"pm.test(\"departureDate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureDate).to.eql(departureDate2);\r",
							"});\r",
							"pm.test(\"departureGate2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departureGate).to.eql(departureGate2);\r",
							"});\r",
							"pm.test(\"departurePort2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departurePort).to.eql(departurePort2);\r",
							"});\r",
							"pm.test(\"departurePortIcao2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].departurePortIcao).to.eql(departurePortIcao2);\r",
							"});\r",
							"pm.test(\"designatorCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].designatorCode).to.eql(designatorCode2);\r",
							"});\r",
							"pm.test(\"equipmentRego2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].equipmentRego).to.eql(equipmentRego2);\r",
							"});\r",
							"pm.test(\"equipmentType2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].equipmentType).to.eql(equipmentType2);\r",
							"});\r",
							"pm.test(\"eta2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].eta).to.eql(eta2);\r",
							"});\r",
							"pm.test(\"etd2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].etd).to.eql(etd2);\r",
							"});\r",
							"pm.test(\"flight2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flight).to.eql(flight2);\r",
							"});\r",
							"pm.test(\"flightFollowId2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flightFollowId).to.eql(flightFollowId2);\r",
							"});\r",
							"pm.test(\"flightSSRs2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].flightSSRs).to.eql(flightSSRs2);\r",
							"});\r",
							"pm.test(\"operator2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].operator).to.eql(operator2);\r",
							"});\r",
							"pm.test(\"paxNumbers2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].paxNumbers).to.eql(paxNumbers2);\r",
							"});\r",
							"pm.test(\"rescheduled2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].rescheduled).to.eql(rescheduled2);\r",
							"});\r",
							"pm.test(\"retime2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].retime).to.eql(retime2);\r",
							"});\r",
							"\r",
							"pm.test(\"sta2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].sta).to.eql(sta2);\r",
							"});\r",
							"pm.test(\"std2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[2].std).to.eql(std2);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-05-02T00:00:00&searchCriteria.arrivalDate=2020-05-02T00:00:00&searchCriteria.bypassCache=true&searchCriteria.departureEnddate=2020-05-04T23:59:00&searchCriteria.arrivalEndDate=2020-05-04T23:59:00&searchCriteria.DeparturePort=HKG",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.departureEnddate",
							"value": "2020-05-04T23:59:00"
						},
						{
							"key": "searchCriteria.arrivalEndDate",
							"value": "2020-05-04T23:59:00"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": "HKG"
						}
					]
				},
				"description": "Ensure flights returned are within the departuredate to departureenddate and arrivaldate to arrivalenddate"
			},
			"response": []
		},
		{
			"name": "Scenario 11:  maximumflightreturn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-05-02T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"HKG\"\r",
							"var departurePortIcao = \"VHHH\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-05-02T04:30:00\"\r",
							"var etd = \"2020-05-02T02:30:00\"\r",
							"var flight = \"576\"\r",
							"var flightFollowId = 173154\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-05-02T04:30:00\"\r",
							"var std = \"2020-05-02T02:30:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[1]\r",
							"\r",
							"var arrivalBay1 = null\r",
							"var arrivalGate1 = \"0\"\r",
							"var arrivalPort1 = \"CMB\"\r",
							"var arrivalPortIcao1 = \"VCBI\"\r",
							"var ata1 = null\r",
							"var atd1 = null\r",
							"var cancelled1 = false\r",
							"var crew1 = []\r",
							"var delays1 = []\r",
							"var departureBay1 = null\r",
							"var departureDate1= \"2020-05-02T00:00:00\"\r",
							"var departureGate1 = null\r",
							"var departurePort1 = \"MAA\"\r",
							"var departurePortIcao1 = \"VOMM\"\r",
							"var designatorCode1 = \"SG\"\r",
							"var equipmentRego1 = \"\"\r",
							"var equipmentType1 = \"73H\"\r",
							"var eta1 = \"2020-05-02T01:30:00\"\r",
							"var etd1 = \"2020-05-02T00:05:00\"\r",
							"var flight1 = \"001\"\r",
							"var flightFollowId1 =  147093\r",
							"var flightSSRs1 = []\r",
							"var operator1 = \"SG\"\r",
							"var paxNumbers1 = []\r",
							"var rescheduled1 = false\r",
							"var retime1 = false\r",
							"var sta1 = \"2020-05-02T01:30:00\"\r",
							"var std1 = \"2020-05-02T00:05:00\"\r",
							"var updatedDate1 = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"-[2]\r",
							"var arrivalBay2 = null\r",
							"var arrivalGate2 = \"0\"\r",
							"var arrivalPort2 = \"BKK\"\r",
							"var arrivalPortIcao2 = \"VTBS\"\r",
							"var ata2 = null\r",
							"var atd2 = null\r",
							"var cancelled2 = false\r",
							"var crew2 = []\r",
							"var delays2 = []\r",
							"var departureBay2 = null\r",
							"var departureDate2= \"2020-05-04T00:00:00\"\r",
							"var departureGate2 = null\r",
							"var departurePort2 = \"HKG\"\r",
							"var departurePortIcao2 = \"VHHH\"\r",
							"var designatorCode2 = \"SG\"\r",
							"var equipmentRego2 = \"\"\r",
							"var equipmentType2 = \"73H\"\r",
							"var eta2 = \"2020-05-04T04:30:00\"\r",
							"var etd2 = \"2020-05-04T02:30:00\"\r",
							"var flight2 = \"576\"\r",
							"var flightFollowId2 = 173156\r",
							"var flightSSRs2 = []\r",
							"var operator2 = \"SG\"\r",
							"var paxNumbers2 = []\r",
							"var rescheduled2 = false\r",
							"var retime2 = false\r",
							"var sta2 = \"2020-05-04T04:30:00\"\r",
							"var std2 = \"2020-05-04T02:30:00\"\r",
							"var updatedDate2 = \"2020-04-26T26:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalBay).to.eql(arrivalBay1);\r",
							"});\r",
							"pm.test(\"ArrivalGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalGate).to.eql(arrivalGate1);\r",
							"});\r",
							"pm.test(\"ArrivalPort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPort).to.eql(arrivalPort1);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].arrivalPortIcao).to.eql(arrivalPortIcao1);\r",
							"});\r",
							"pm.test(\"ata1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].ata).to.eql(ata1);\r",
							"});\r",
							"pm.test(\"atd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].atd).to.eql(atd1);\r",
							"});\r",
							"pm.test(\"cancelled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].cancelled).to.eql(cancelled1);\r",
							"});\r",
							"pm.test(\"crew1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].crew).to.eql(crew1);\r",
							"});\r",
							"pm.test(\"departureBay1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureBay).to.eql(departureBay1);\r",
							"});\r",
							"pm.test(\"departureDate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureDate).to.eql(departureDate1);\r",
							"});\r",
							"pm.test(\"departureGate1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departureGate).to.eql(departureGate1);\r",
							"});\r",
							"pm.test(\"departurePort1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePort).to.eql(departurePort1);\r",
							"});\r",
							"pm.test(\"departurePortIcao1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].departurePortIcao).to.eql(departurePortIcao1);\r",
							"});\r",
							"pm.test(\"designatorCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].designatorCode).to.eql(designatorCode1);\r",
							"});\r",
							"pm.test(\"equipmentRego1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentRego).to.eql(equipmentRego1);\r",
							"});\r",
							"pm.test(\"equipmentType1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].equipmentType).to.eql(equipmentType1);\r",
							"});\r",
							"pm.test(\"eta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].eta).to.eql(eta1);\r",
							"});\r",
							"pm.test(\"etd1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].etd).to.eql(etd1);\r",
							"});\r",
							"pm.test(\"flight1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flight).to.eql(flight1);\r",
							"});\r",
							"pm.test(\"flightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightFollowId).to.eql(flightFollowId1);\r",
							"});\r",
							"pm.test(\"flightSSRs1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].flightSSRs).to.eql(flightSSRs1);\r",
							"});\r",
							"pm.test(\"operator1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].operator).to.eql(operator1);\r",
							"});\r",
							"pm.test(\"paxNumbers1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].paxNumbers).to.eql(paxNumbers1);\r",
							"});\r",
							"pm.test(\"rescheduled1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].rescheduled).to.eql(rescheduled1);\r",
							"});\r",
							"pm.test(\"retime1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].retime).to.eql(retime1);\r",
							"});\r",
							"\r",
							"pm.test(\"sta1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].sta).to.eql(sta1);\r",
							"});\r",
							"pm.test(\"std1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[1].std).to.eql(std1);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-05-02T00:00:00&searchCriteria.arrivalDate=2020-05-02T00:00:00&searchCriteria.bypassCache=true&searchCriteria.departureEnddate=2020-05-17T23:59:00&searchCriteria.arrivalEndDate=2020-05-17T23:59:00",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-05-02T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.departureEnddate",
							"value": "2020-05-17T23:59:00"
						},
						{
							"key": "searchCriteria.arrivalEndDate",
							"value": "2020-05-17T23:59:00"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": "HKG",
							"disabled": true
						},
						{
							"key": "searchCriteria.MaximumFlightsReturned",
							"value": "2000",
							"disabled": true
						}
					]
				},
				"description": "maximumflightreturn"
			},
			"response": []
		},
		{
			"name": "Scenario 18:  Future Dates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 15000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(15000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2021-02-14T00:00:00&searchCriteria.arrivalDate=2021-02-14T00:00:00&searchCriteria.bypassCache=true&searchCriteria.departureEnddate=2021-03-01T23:59:00&searchCriteria.arrivalEndDate=2021-03-01T23:59:00",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2021-02-14T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2021-02-14T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.departureEnddate",
							"value": "2021-03-01T23:59:00"
						},
						{
							"key": "searchCriteria.arrivalEndDate",
							"value": "2021-03-01T23:59:00"
						},
						{
							"key": "searchCriteria.DeparturePort",
							"value": "HKG",
							"disabled": true
						},
						{
							"key": "searchCriteria.MaximumFlightsReturned",
							"value": "5",
							"disabled": true
						}
					]
				},
				"description": "maximumflightreturn"
			},
			"response": []
		},
		{
			"name": "Scenario 17:  Perf Optimization 2000 flights",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-04-02T00:00:00&searchCriteria.arrivalDate=2020-04-02T00:00:00&searchCriteria.bypassCache=true&searchCriteria.departureEnddate=2020-04-17T23:59:00&searchCriteria.arrivalEndDate=2020-04-17T23:59:00&searchCriteria.Getcrew=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-04-02T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-04-02T00:00:00"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.departureEnddate",
							"value": "2020-04-17T23:59:00"
						},
						{
							"key": "searchCriteria.arrivalEndDate",
							"value": "2020-04-17T23:59:00"
						},
						{
							"key": "",
							"value": "HKG",
							"disabled": true
						},
						{
							"key": "searchCriteria.MaximumFlightsReturned",
							"value": "2",
							"disabled": true
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true"
						}
					]
				},
				"description": "maximumflightreturn"
			},
			"response": []
		},
		{
			"name": "Scenario 12: GetCrew",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var suffix = \"G\" //PLA-313\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//CrewVar\r",
							"var crewbase = \"DEL\"\r",
							"var crewememailAddress = \"APOORVA2@gmail.com\" //PLA-395\r",
							"var crewempcode = \"126697\"\r",
							"var crewemployeeId = 2311\r",
							"var crewequipmentGroupCode = null\r",
							"var crewequipmentGroupDescription = null\r",
							"var crewequipmentGroupId = null\r",
							"var crewequipmentTypeCode = null\r",
							"var crewequipmentTypeId = null\r",
							"var crewequipmentTypeName = null\r",
							"var crewflightFollowId = 147102\r",
							"var crewflightLogEmployeeApproaches = null\r",
							"var crewflightLogEmployeeFlyings = null\r",
							"var crewisOperating = true\r",
							"var crewknowAs = \"APOORVA  AGARWAL\"\r",
							"var crewname1 = \"APOORVA\"\r",
							"var crewname2 = \"Kobe\" //PLA-313\r",
							"var crewname4 = \"AGARWAL\"\r",
							"var crewname3 = \"Jordan\"\r",
							"var crewrank= \"CPT\"\r",
							"var crewrankCode = null\r",
							"var crewrankId = null\r",
							"var crewrankName = null\r",
							"//Crewroles\r",
							"var crewrolesactivityRoleId =1\r",
							"var crewrolescode =\"OP\"\r",
							"var crewrolesdescription = \"Operating\"\r",
							"var crewrolesid = 2027\r",
							"var crewrolespairingEmployeeActivityId = 1978\r",
							"//Crewseat\r",
							"var crewseatcode = \"LH\"\r",
							"var crewseatequipmentSeatId = 7\r",
							"var crewseatid = 29\r",
							"var crewseatname = \"LH\"\r",
							"var crewseatpairingEmployeeActivityId = 1978\r",
							"var crewseatTypeId = 2\r",
							"//CrewVar[1]\r",
							"var crewbase1 = \"DEL\"\r",
							"var crewempcode1 = \"128956\"\r",
							"var crewemployeeId1 = 3056\r",
							"var crewequipmentGroupCode1 = null\r",
							"var crewequipmentGroupDescription1 = null\r",
							"var crewequipmentGroupId1 = null\r",
							"var crewequipmentTypeCode1 = null\r",
							"var crewequipmentTypeId1 = null\r",
							"var crewequipmentTypeName1 = null\r",
							"var crewflightFollowId1 = flightFollowId\r",
							"var crewflightLogEmployeeApproaches1 = null\r",
							"var crewflightLogEmployeeFlyings1 = null\r",
							"var crewisOperating1 = true\r",
							"var crewknowAs1 = \"ABHIJIT ANAND ADSUL\"\r",
							"var crewname11 = \"ABHIJIT\"\r",
							"var crewname41 = \"ADSUL\"\r",
							"var crewrank1 = \"CPT\"\r",
							"var crewrankCode1 = null\r",
							"var crewrankId1 = null\r",
							"var crewrankName1 = null\r",
							"var crewroles1 = null\r",
							"var crewseat1 = null\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"//pm.test(\"crew\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"//});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"pm.test(\"suffix\", function () { //PLA-313\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].suffix).to.eql(suffix);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"//CrewTest [0]\r",
							"pm.test(\"crewbase\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].base).to.eql(crewbase);\r",
							"});\r",
							"pm.test(\"crewememailAddress\", function () {   //PLA-395\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].emailAddress).to.eql(crewememailAddress); \r",
							"});\r",
							"pm.test(\"crewempcode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].empCode).to.eql(crewempcode);\r",
							"});\r",
							"pm.test(\"crewemployeeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].employeeId).to.eql(crewemployeeId);\r",
							"});\r",
							"pm.test(\"crewequipmentGroupCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentGroupCode).to.eql(crewequipmentGroupCode);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentTypeCode).to.eql(crewequipmentTypeCode);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentTypeId).to.eql(crewequipmentTypeId);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentTypeName).to.eql(crewequipmentTypeName);\r",
							"});\r",
							"pm.test(\"crewflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].flightFollowId).to.eql(crewflightFollowId);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeApproaches\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].flightLogEmployeeApproaches).to.eql(crewflightLogEmployeeApproaches);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeFlyings\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].flightLogEmployeeFlyings).to.eql(crewflightLogEmployeeFlyings);\r",
							"});\r",
							"pm.test(\"crewisOperating\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].isOperating).to.eql(crewisOperating);\r",
							"});\r",
							"pm.test(\"crewknowAs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].knowAs).to.eql(crewknowAs);\r",
							"});\r",
							"pm.test(\"crewname1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].name1).to.eql(crewname1);\r",
							"});\r",
							"pm.test(\"crewname2\", function () { //PLA-313\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].name2).to.eql(crewname2);\r",
							"});\r",
							"pm.test(\"crewname4\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].name4).to.eql(crewname4);\r",
							"});\r",
							"pm.test(\"crewname3\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].name3).to.eql(crewname3);\r",
							"});\r",
							"pm.test(\"crewrank\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rank).to.eql(crewrank);\r",
							"});\r",
							"pm.test(\"crewrankCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rankCode).to.eql(crewrankCode);\r",
							"});\r",
							"pm.test(\"crewrankId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rankId).to.eql(crewrankId);\r",
							"});\r",
							"pm.test(\"crewrankName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rankName).to.eql(crewrankName);\r",
							"});\r",
							"//Crew Test [0] Role [0]\r",
							"pm.test(\"crewrolesactivityRoleId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].roles[0].activityRoleId).to.eql(crewrolesactivityRoleId);\r",
							"});\r",
							"pm.test(\"crewrolescode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].roles[0].code).to.eql(crewrolescode);\r",
							"});\r",
							"pm.test(\"crewrolesdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].roles[0].description).to.eql(crewrolesdescription);\r",
							"});\r",
							"pm.test(\"crewrolesid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].roles[0].id).to.eql(crewrolesid);\r",
							"});\r",
							"pm.test(\"crewrolespairingEmployeeActivityId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].roles[0].pairingEmployeeActivityId).to.eql(crewrolespairingEmployeeActivityId);\r",
							"});\r",
							"//Crew Test [0] Seat [0]\r",
							"pm.test(\"crewseatcode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].seat.code).to.eql(crewseatcode);\r",
							"});\r",
							"pm.test(\"crewseatequipmentSeatId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].seat.equipmentSeatId).to.eql(crewseatequipmentSeatId);\r",
							"});\r",
							"pm.test(\"crewseatid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].seat.id).to.eql(crewseatid);\r",
							"});\r",
							"pm.test(\"crewseatname\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].seat.name).to.eql(crewseatname);\r",
							"});\r",
							"pm.test(\"crewseatpairingEmployeeActivityId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].seat.pairingEmployeeActivityId).to.eql(crewseatpairingEmployeeActivityId);\r",
							"});\r",
							"pm.test(\"crewseatseatTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].seat.seatTypeId).to.eql(crewseatTypeId);\r",
							"});\r",
							"\r",
							"\r",
							"//Crew Test [1]\r",
							"pm.test(\"crewbase1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].base).to.eql(crewbase1);\r",
							"});\r",
							"pm.test(\"crewempcode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].empCode).to.eql(crewempcode1);\r",
							"});\r",
							"pm.test(\"crewemployeeId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].employeeId).to.eql(crewemployeeId1);\r",
							"});\r",
							"pm.test(\"crewequipmentGroupCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentGroupCode).to.eql(crewequipmentGroupCode1);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentTypeCode).to.eql(crewequipmentTypeCode1);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentTypeId).to.eql(crewequipmentTypeId1);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeName1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentTypeName).to.eql(crewequipmentTypeName1);\r",
							"});\r",
							"pm.test(\"crewflightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].flightFollowId).to.eql(crewflightFollowId1);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeApproaches1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].flightLogEmployeeApproaches).to.eql(crewflightLogEmployeeApproaches1);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeFlyings1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].flightLogEmployeeFlyings).to.eql(crewflightLogEmployeeFlyings1);\r",
							"});\r",
							"pm.test(\"crewisOperating1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].isOperating).to.eql(crewisOperating1);\r",
							"});\r",
							"pm.test(\"crewknowAs1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].knowAs).to.eql(crewknowAs1);\r",
							"});\r",
							"pm.test(\"crewname11\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].name1).to.eql(crewname11);\r",
							"});\r",
							"pm.test(\"crewname41\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].name4).to.eql(crewname41);\r",
							"});\r",
							"pm.test(\"crewrank1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rank).to.eql(crewrank1);\r",
							"});\r",
							"pm.test(\"crewrankCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rankCode).to.eql(crewrankCode1);\r",
							"});\r",
							"pm.test(\"crewrankId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rankId).to.eql(crewrankId1);\r",
							"});\r",
							"pm.test(\"crewrankName1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rankName).to.eql(crewrankName1);\r",
							"});\r",
							"//pm.test(\"crewroles1\", function () {\r",
							"  //  var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].crew[1].roles).to.eql(crewroles1);\r",
							"//});\r",
							"//pm.test(\"crewseat1\", function () {\r",
							"  //  var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].crew[1].seat).to.eql(crewseat1);\r",
							"//});\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=false&searchCriteria.Getcrew=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "false"
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true"
						},
						{
							"key": "searchCriteria.Bay",
							"value": "A",
							"disabled": true
						},
						{
							"key": "searchCriteria.Gate",
							"value": "A1",
							"disabled": true
						},
						{
							"key": "searchCriteria.designatorCode",
							"value": "S",
							"disabled": true
						},
						{
							"key": "searchCriteria.Changeddate",
							"value": "2020-07-09T00:00:00Z",
							"disabled": true
						}
					]
				},
				"description": "departureDate\r\narrivalDate\r\nGetCrew\r\n\r\nEnsure crews allocated to an active pairing and  has a roster will be displayed in the response"
			},
			"response": []
		},
		{
			"name": "Scenario 13: BAY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"var crew = []\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=true&searchCriteria.Bay=A",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true",
							"disabled": true
						},
						{
							"key": "searchCriteria.Bay",
							"value": "A"
						},
						{
							"key": "searchCriteria.Gate",
							"value": "A1",
							"disabled": true
						},
						{
							"key": "searchCriteria.designatorCode",
							"value": "S",
							"disabled": true
						},
						{
							"key": "searchCriteria.Changeddate",
							"value": "2020-07-09T00:00:00Z",
							"disabled": true
						}
					]
				},
				"description": "Ensure that returned flights are within departureDATE (date 00:00 to 23:00 if departureenddate is null)\r\n\r\nand within Arrivaldate (00:00 to 23:00 if arrivalenddate is null)\r\nand BAY is equal to departureBay\r\n\r\n  \r\n\r\n"
			},
			"response": []
		},
		{
			"name": "Scenario 14: Gate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"var crew = []\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=true&searchCriteria.Gate=A1",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true",
							"disabled": true
						},
						{
							"key": "searchCriteria.Bay",
							"value": "A",
							"disabled": true
						},
						{
							"key": "searchCriteria.Gate",
							"value": "A1"
						},
						{
							"key": "searchCriteria.designatorCode",
							"value": "S",
							"disabled": true
						},
						{
							"key": "searchCriteria.Changeddate",
							"value": "2020-07-09T00:00:00Z",
							"disabled": true
						}
					]
				},
				"description": "Ensure that returned flights are within departureDATE (date 00:00 to 23:00 if departureenddate is null)\r\n\r\nand within Arrivaldate (00:00 to 23:00 if arrivalenddate is null)\r\nand Gate is equal to departureGate\r\n\r\n  \r\n\r\n"
			},
			"response": []
		},
		{
			"name": "Scenario 15  designator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = null\r",
							"var arrivalGate = \"0\"\r",
							"var arrivalPort = \"BKK\"\r",
							"var arrivalPortIcao = \"VTBS\"\r",
							"var ata = null\r",
							"var atd = null\r",
							"var cancelled = false\r",
							"var crew = []\r",
							"var delays = []\r",
							"var departureBay = null\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = null\r",
							"var departurePort = \"CCU\"\r",
							"var departurePortIcao = \"VECC\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"\"\r",
							"var equipmentType = \"738\"\r",
							"var eta = \"2020-06-01T04:10:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"083\"\r",
							"var flightFollowId = 148533\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var paxNumbers = []\r",
							"var rescheduled = false\r",
							"var retime = false\r",
							"var sta = \"2020-06-01T04:10:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"pm.test(\"crew\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"pm.test(\"flightSSRs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"pm.test(\"paxNumbers\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers).to.eql(paxNumbers);\r",
							"});\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00&searchCriteria.bypassCache=true&searchCriteria.flight=083&searchCriteria.DesignatorCode=SG",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00",
							"disabled": true
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.flight",
							"value": "083"
						},
						{
							"key": "searchCriteria.DesignatorCode",
							"value": "SG"
						}
					]
				},
				"description": "departureDate\r\narrivalDate\r\nflight\r\nEnsure matching flight number has matching designator is returned and also within the departure and arrival date\r\n\r\nnote: code logic is optins for desinator should only be form the designator table if the input is not a designator filer will not be used"
			},
			"response": []
		},
		{
			"name": "RES API GetFlight by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var arrivalBay = \"B\"\r",
							"var arrivalGate = \"B1\"\r",
							"var arrivalPort = \"CMB\"\r",
							"var arrivalPortIcao = \"VCBI\"\r",
							"var ata = \"2020-06-01T01:31:00\"\r",
							"var atd = \"2020-06-01T00:06:00\"\r",
							"var cancelled = false\r",
							"var delays = []\r",
							"var departureBay = \"A\"\r",
							"var departureDate= \"2020-06-01T00:00:00\"\r",
							"var departureGate = \"A1\"\r",
							"var departurePort = \"MAA\"\r",
							"var departurePortIcao = \"VOMM\"\r",
							"var designatorCode = \"SG\"\r",
							"var equipmentRego = \"SYR\"\r",
							"var equipmentType = \"73H\"\r",
							"var eta = \"2020-06-01T01:30:00\"\r",
							"var etd = \"2020-06-01T00:05:00\"\r",
							"var flight = \"001\"\r",
							"var flightFollowId = 147102\r",
							"var flightSSRs = []\r",
							"var operator = \"SG\"\r",
							"var rescheduled = false\r",
							"var rescheduled = false      \r",
							"var retime = false\r",
							"var sta = \"2020-06-01T01:30:00\"\r",
							"var std = \"2020-06-01T00:05:00\"\r",
							"var updatedDate = \"2020-04-16T16:46:39.043\"\r",
							"//PaxNumbersVar\r",
							"var paxNumbers = []\r",
							"var paxNumbersCode = \"C\"\r",
							"var paxNumbersflightfollowid = flightFollowId\r",
							"var paxNumbersdesc = \"Child\"\r",
							"var paxNumbersNumber = 2.00000\r",
							"//PaxNumbersVar[1]\r",
							"var paxNumbersCode1 = \"INF\"\r",
							"var paxNumbersflightfollowid1 = flightFollowId\r",
							"var paxNumbersdesc1 = \"Infant\"\r",
							"var paxNumbersNumber1 = 1.00000\r",
							"//PaxNumbersVar[2]\r",
							"var paxNumbersCode2 = \"A\"\r",
							"var paxNumbersflightfollowid2 = flightFollowId\r",
							"var paxNumbersdesc2 = \"Adult\"\r",
							"var paxNumbersNumber2 = 1.00000\r",
							"//CrewVar\r",
							"var crewbase = \"DEL\"\r",
							"var crewempcode = \"126697\"\r",
							"var crewemployeeId = 2311\r",
							"var crewequipmentGroupCode = null\r",
							"var crewequipmentGroupDescription = null\r",
							"var crewequipmentGroupId = null\r",
							"var crewequipmentTypeCode = null\r",
							"var crewequipmentTypeId = null\r",
							"var crewequipmentTypeName = null\r",
							"var crewflightFollowId = 147102\r",
							"var crewflightLogEmployeeApproaches = null\r",
							"var crewflightLogEmployeeFlyings = null\r",
							"var crewisOperating = true\r",
							"var crewknowAs = \"APOORVA  AGARWAL\"\r",
							"var crewname1 = \"APOORVA\"\r",
							"var crewname4 = \"AGARWAL\"\r",
							"var crewrank= \"CPT\"\r",
							"var crewrankCode = null\r",
							"var crewrankId = null\r",
							"var crewrankName = null\r",
							"var crewroles = null\r",
							"var crewseat = null\r",
							"//CrewVar[1]\r",
							"var crewbase1 = \"DEL\"\r",
							"var crewempcode1 = \"128956\"\r",
							"var crewemployeeId1 = 3056\r",
							"var crewequipmentGroupCode1 = null\r",
							"var crewequipmentGroupDescription1 = null\r",
							"var crewequipmentGroupId1 = null\r",
							"var crewequipmentTypeCode1 = null\r",
							"var crewequipmentTypeId1 = null\r",
							"var crewequipmentTypeName1 = null\r",
							"var crewflightFollowId1 = flightFollowId\r",
							"var crewflightLogEmployeeApproaches1 = null\r",
							"var crewflightLogEmployeeFlyings1 = null\r",
							"var crewisOperating1 = true\r",
							"var crewknowAs1 = \"ABHIJIT ANAND ADSUL\"\r",
							"var crewname11 = \"ABHIJIT\"\r",
							"var crewname41 = \"ADSUL\"\r",
							"var crewrank1 = \"CPT\"\r",
							"var crewrankCode1 = null\r",
							"var crewrankId1 = null\r",
							"var crewrankName1 = null\r",
							"var crewroles1 = null\r",
							"var crewseat1 = null\r",
							"//delay\r",
							"var delayscode = '32'\r",
							"var delaysdelayCodeId = null\r",
							"var delaysdelayComment= null\r",
							"var delaysdelayId = 33\r",
							"var delaysdelayTypeId = null\r",
							"var delaysdescription = \"Loading, Unloading, bulky/special load, cabin load, lack of loading staff\"\r",
							"var delaysflightFollowId = flightFollowId\r",
							"var delaysminutes = 1\r",
							"var delaystype = \"DEP\"\r",
							"//flightSSRs\r",
							"var flightSSRscomment = \"TEST\"\r",
							"var flightSSRsflightFollowId = flightFollowId\r",
							"\r",
							"\r",
							"//START TEST\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ArrivalBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalBay).to.eql(arrivalBay);\r",
							"});\r",
							"pm.test(\"ArrivalGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalGate).to.eql(arrivalGate);\r",
							"});\r",
							"pm.test(\"ArrivalPort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPort).to.eql(arrivalPort);\r",
							"});\r",
							"pm.test(\"arrivalPortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].arrivalPortIcao).to.eql(arrivalPortIcao);\r",
							"});\r",
							"pm.test(\"ata\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].ata).to.eql(ata);\r",
							"});\r",
							"pm.test(\"atd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].atd).to.eql(atd);\r",
							"});\r",
							"pm.test(\"cancelled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].cancelled).to.eql(cancelled);\r",
							"});\r",
							"//pm.test(\"crew\", function () {\r",
							"    //var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].crew).to.eql(crew);\r",
							"//});\r",
							"pm.test(\"departureBay\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureBay).to.eql(departureBay);\r",
							"});\r",
							"pm.test(\"departureDate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureDate).to.eql(departureDate);\r",
							"});\r",
							"pm.test(\"departureGate\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departureGate).to.eql(departureGate);\r",
							"});\r",
							"pm.test(\"departurePort\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePort).to.eql(departurePort);\r",
							"});\r",
							"pm.test(\"departurePortIcao\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].departurePortIcao).to.eql(departurePortIcao);\r",
							"});\r",
							"pm.test(\"designatorCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].designatorCode).to.eql(designatorCode);\r",
							"});\r",
							"pm.test(\"equipmentRego\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentRego).to.eql(equipmentRego);\r",
							"});\r",
							"pm.test(\"equipmentType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].equipmentType).to.eql(equipmentType);\r",
							"});\r",
							"pm.test(\"eta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].eta).to.eql(eta);\r",
							"});\r",
							"pm.test(\"etd\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].etd).to.eql(etd);\r",
							"});\r",
							"pm.test(\"flight\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flight).to.eql(flight);\r",
							"});\r",
							"pm.test(\"flightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightFollowId).to.eql(flightFollowId);\r",
							"});\r",
							"//pm.test(\"flightSSRs\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].flightSSRs).to.eql(flightSSRs);\r",
							"//});\r",
							"pm.test(\"operator\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].operator).to.eql(operator);\r",
							"});\r",
							"\r",
							"pm.test(\"rescheduled\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].rescheduled).to.eql(rescheduled);\r",
							"});\r",
							"pm.test(\"retime\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].retime).to.eql(retime);\r",
							"});\r",
							"\r",
							"pm.test(\"sta\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].sta).to.eql(sta);\r",
							"});\r",
							"pm.test(\"std\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].std).to.eql(std);\r",
							"});\r",
							"//PaxnumbersTest\r",
							"pm.test(\"paxNumbersCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].code).to.eql(paxNumbersCode);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].description).to.eql(paxNumbersdesc);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].flightFollowId).to.eql(paxNumbersflightfollowid);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[0].number).to.eql(paxNumbersNumber);\r",
							"});\r",
							"//PaxnumbersTest[1]\r",
							"pm.test(\"paxNumbersCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].code).to.eql(paxNumbersCode1);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].description).to.eql(paxNumbersdesc1);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].flightFollowId).to.eql(paxNumbersflightfollowid1);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[1].number).to.eql(paxNumbersNumber1);\r",
							"});\r",
							"//PaxnumbersTest[2]\r",
							"pm.test(\"paxNumbersCode2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].code).to.eql(paxNumbersCode2);\r",
							"});\r",
							"pm.test(\"paxNumbersdesc2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].description).to.eql(paxNumbersdesc2);\r",
							"});\r",
							"pm.test(\"paxNumbersflightfollowid2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].flightFollowId).to.eql(paxNumbersflightfollowid2);\r",
							"});\r",
							"pm.test(\"paxNumbersNumber2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].paxNumbers[2].number).to.eql(paxNumbersNumber2);\r",
							"});\r",
							"//CrewTest [0]\r",
							"pm.test(\"crewbase\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].base).to.eql(crewbase);\r",
							"});\r",
							"pm.test(\"crewempcode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].empCode).to.eql(crewempcode);\r",
							"});\r",
							"pm.test(\"crewemployeeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].employeeId).to.eql(crewemployeeId);\r",
							"});\r",
							"pm.test(\"crewequipmentGroupCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentGroupCode).to.eql(crewequipmentGroupCode);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentTypeCode).to.eql(crewequipmentTypeCode);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentTypeId).to.eql(crewequipmentTypeId);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].equipmentTypeName).to.eql(crewequipmentTypeName);\r",
							"});\r",
							"pm.test(\"crewflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].flightFollowId).to.eql(crewflightFollowId);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeApproaches\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].flightLogEmployeeApproaches).to.eql(crewflightLogEmployeeApproaches);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeFlyings\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].flightLogEmployeeFlyings).to.eql(crewflightLogEmployeeFlyings);\r",
							"});\r",
							"pm.test(\"crewisOperating\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].isOperating).to.eql(crewisOperating);\r",
							"});\r",
							"pm.test(\"crewknowAs\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].knowAs).to.eql(crewknowAs);\r",
							"});\r",
							"pm.test(\"crewname1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].name1).to.eql(crewname1);\r",
							"});\r",
							"pm.test(\"crewname4\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].name4).to.eql(crewname4);\r",
							"});\r",
							"pm.test(\"crewrank\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rank).to.eql(crewrank);\r",
							"});\r",
							"pm.test(\"crewrankCode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rankCode).to.eql(crewrankCode);\r",
							"});\r",
							"pm.test(\"crewrankId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rankId).to.eql(crewrankId);\r",
							"});\r",
							"pm.test(\"crewrankName\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[0].rankName).to.eql(crewrankName);\r",
							"});\r",
							"//pm.test(\"crewroles\", function () {\r",
							"  //  var jsonData = pm.response.json();\r",
							"    //pm.expect(jsonData[0].crew[0].roles).to.eql(crewroles);\r",
							"//});\r",
							"//pm.test(\"crewseat\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"   // pm.expect(jsonData[0].crew[0].seat).to.eql(crewseat);\r",
							"//});\r",
							"\r",
							"//Crew Test [1]\r",
							"pm.test(\"crewbase1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].base).to.eql(crewbase1);\r",
							"});\r",
							"pm.test(\"crewempcode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].empCode).to.eql(crewempcode1);\r",
							"});\r",
							"pm.test(\"crewemployeeId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].employeeId).to.eql(crewemployeeId1);\r",
							"});\r",
							"pm.test(\"crewequipmentGroupCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentGroupCode).to.eql(crewequipmentGroupCode1);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentTypeCode).to.eql(crewequipmentTypeCode1);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentTypeId).to.eql(crewequipmentTypeId1);\r",
							"});\r",
							"pm.test(\"crewequipmentTypeName1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].equipmentTypeName).to.eql(crewequipmentTypeName1);\r",
							"});\r",
							"pm.test(\"crewflightFollowId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].flightFollowId).to.eql(crewflightFollowId1);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeApproaches1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].flightLogEmployeeApproaches).to.eql(crewflightLogEmployeeApproaches1);\r",
							"});\r",
							"pm.test(\"crewflightLogEmployeeFlyings1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].flightLogEmployeeFlyings).to.eql(crewflightLogEmployeeFlyings1);\r",
							"});\r",
							"pm.test(\"crewisOperating1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].isOperating).to.eql(crewisOperating1);\r",
							"});\r",
							"pm.test(\"crewknowAs1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].knowAs).to.eql(crewknowAs1);\r",
							"});\r",
							"pm.test(\"crewname11\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].name1).to.eql(crewname11);\r",
							"});\r",
							"pm.test(\"crewname41\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].name4).to.eql(crewname41);\r",
							"});\r",
							"pm.test(\"crewrank1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rank).to.eql(crewrank1);\r",
							"});\r",
							"pm.test(\"crewrankCode1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rankCode).to.eql(crewrankCode1);\r",
							"});\r",
							"pm.test(\"crewrankId1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rankId).to.eql(crewrankId1);\r",
							"});\r",
							"pm.test(\"crewrankName1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].rankName).to.eql(crewrankName1);\r",
							"});\r",
							"//pm.test(\"crewroles1\", function () {\r",
							"   // var jsonData = pm.response.json();\r",
							"   // pm.expect(jsonData[0].crew[1].roles).to.eql(crewroles1);\r",
							"//});\r",
							"pm.test(\"crewseat1\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].crew[1].seat).to.eql(crewseat1);\r",
							"});\r",
							"//FlightSSRSTEST[0]\r",
							"pm.test(\"flightSSRscomment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].comment).to.eql(flightSSRscomment);\r",
							"});\r",
							"pm.test(\"flightSSRsflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].flightSSRs[0].flightFollowId).to.eql(flightSSRsflightFollowId);\r",
							"});\r",
							"\r",
							"//DelaysTEST\r",
							"pm.test(\"delayscode\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].code).to.eql(delayscode);\r",
							"});\r",
							"pm.test(\"delaysdelayCodeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayCodeId).to.eql(delaysdelayCodeId);\r",
							"});\r",
							"pm.test(\"delaysdelayComment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayComment).to.eql(delaysdelayComment);\r",
							"});\r",
							"pm.test(\"delaysdelayId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayId).to.eql(delaysdelayId);\r",
							"});\r",
							"pm.test(\"delaysdelayTypeId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].delayTypeId).to.eql(delaysdelayTypeId);\r",
							"});\r",
							"pm.test(\"delaysdescription\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].description).to.eql(delaysdescription);\r",
							"});\r",
							"pm.test(\"delaysflightFollowId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].flightFollowId).to.eql(delaysflightFollowId);\r",
							"});\r",
							"pm.test(\"delaysminutes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].minutes).to.eql(delaysminutes);\r",
							"});\r",
							"pm.test(\"delaysType\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].delays[0].type).to.eql(delaystype);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "{{OcpApimSubscriptionKey}}"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "{{Env}}"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformationById?flightIds=147102, 147134&getCrew=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformationById"
					],
					"query": [
						{
							"key": "searchCriteria.DeparturePort",
							"value": "HKG",
							"disabled": true
						},
						{
							"key": "flightIds",
							"value": "147102, 147134"
						},
						{
							"key": "getCrew",
							"value": "true"
						},
						{
							"key": "timemode",
							"value": "Z",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "No security Authenticate RES API GetFilteredFlightInformation Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Save access_token to Postman variables, so that this is\r",
							"// populated as bearer tokens for subsequent API calls.\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData);\r",
							"\r",
							"pm.globals.set('access_token', jsonData.access_token);\r",
							"console.log(`New token has been set: ${jsonData.access_token}`);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Env",
						"value": "{{Env}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Ocp-Apim-Subscription-Key",
						"value": "{{OcpApimSubscriptionKey}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "MerlotAdmin",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Password",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "role",
							"value": "User",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/auth/token",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"auth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Scenario 16: Security",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Ocp-Apim-Subscription-Key",
						"type": "text",
						"value": "abfbd810b544493b9a7475a30b5e3db5"
					},
					{
						"key": "Env",
						"type": "text",
						"value": "HGNSNP"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://merlot-opt.azure-api.net/flight/api/Flight/GetFilteredFlightInformation?searchCriteria.departureDate=2020-06-01T00:00:00Z&searchCriteria.arrivalDate=2020-06-01T00:00:00Z&searchCriteria.bypassCache=true",
					"protocol": "https",
					"host": [
						"merlot-opt",
						"azure-api",
						"net"
					],
					"path": [
						"flight",
						"api",
						"Flight",
						"GetFilteredFlightInformation"
					],
					"query": [
						{
							"key": "searchCriteria.departureDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.arrivalDate",
							"value": "2020-06-01T00:00:00Z"
						},
						{
							"key": "searchCriteria.bypassCache",
							"value": "true"
						},
						{
							"key": "searchCriteria.Getcrew",
							"value": "true",
							"disabled": true
						},
						{
							"key": "searchCriteria.Bay",
							"value": "A",
							"disabled": true
						},
						{
							"key": "searchCriteria.Gate",
							"value": "A1",
							"disabled": true
						},
						{
							"key": "searchCriteria.designatorCode",
							"value": "S",
							"disabled": true
						},
						{
							"key": "searchCriteria.Changeddate",
							"value": "2020-07-09T00:00:00Z",
							"disabled": true
						}
					]
				},
				"description": "user used has no view access in usersecurity option for AF"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "OcpApimSubscriptionKey",
			"value": "cd61513df7c947aea0904b370f7ae32f"
		},
		{
			"key": "Env",
			"value": "HGNSNP"
		}
	]
}